AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Micronaut AWS Lambda Application

Parameters:
  AuthorizationKey:
    Type: String
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, prod]
    Description: The environment to deploy to

Globals:
  Function:
    Timeout: 30
    MemorySize: 512
    Runtime: java21
    Architectures:
      - x86_64
    Environment:
      Variables:
        MICRONAUT_ENVIRONMENTS: !Ref Environment
        AUTHORIZATION_KEY: !Ref AuthorizationKey

Resources:
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub '${AWS::StackName}-api'
      StageName: !Ref Environment
      Auth:
        Authorizers:
          CustomAuthorizer:
            FunctionArn: !GetAtt CustomAuthorizerFunction.Arn
            FunctionPayloadType: REQUEST
            Identity:
              Headers:
                - Authorization
        DefaultAuthorizer: CustomAuthorizer
  CustomAuthorizerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: org.miccab.installation.flow.api.authorizer.SimpleAuthorizer
      CodeUri: target/installation-flow-api-1.0-SNAPSHOT.jar
      Policies:
        - AWSLambdaBasicExecutionRole
  MicronautLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: io.micronaut.function.aws.proxy.payload1.ApiGatewayProxyRequestEventFunction
      CodeUri: target/installation-flow-api-1.0-SNAPSHOT.jar
      Policies:
        - AWSLambdaBasicExecutionRole
        - PolicyName: DynamoDBAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                Resource: !GetAtt InstallationTypeDynamoDBTable.Arn
      Events:
        ApiEvents:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /{proxy+}
            Method: ANY
  InstallationTypeDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub 'InstallationType-${Environment}'
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: String
        - AttributeName: name
          AttributeType: String
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5


Outputs:
  HttpApi:
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/"
  InstallationTypeDynamoDBTable:
    Value: !Ref InstallationTypeDynamoDBTable